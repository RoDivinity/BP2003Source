w = c()
if (two_Sided == FALSE) {
T = length(data)
#filter in a decreasing weight of history
a = rep(0.9,q)
for (i in 1:q){
a[i] = 0.9*10^(-i)
}
sum_w = sum(a)
for (i in 1:q){
a[i] = a[i] / sum_w
}
w = append(w,data[1:q])
print(w)
for (i in q+1:T){
w_t = 0
for (j in 1:q){
w_t = w_t + a[j]*data[i-j]
}
w = append(w,w_t)
}
print(w)
return (w)
}
else {
#2-sided MA calculations
#append left and right tails of data for computation
l_data = rep(data[1],q)
r_data = rep(data[length(data)],q)
data = append(data, l_data, after = 1)
data = append(data, r_data)
T = length(data)
for (i in q+1:T-q){
#calculation of MA_t:
w_t = 1/(2*q+1)*sum(data[(i-q:i+q)])
w = append(w,w_t)
}
}
return(w)
}
test_series = c(0,1,2,1,2,1,2,2,2,3,4,5,4,5,6,7,7,8,9,10,9,8,11)
x = movAvg(test_series,3,TRUE)
y = movAvg(test_series,3,FALSE)
plot(test_series)
plot(x)
plot(y)
# moving average calculations
movAvg = function(data,q,two_Sided) {
# # parameter:
#   q = # of periods to calculate mean of moving
#   data = data series
#   two_sided = whether the MA is two sided or one sided
w = c()
if (two_Sided == FALSE) {
T = length(data)
#filter in a decreasing weight of history
a = rep(0.9,q)
for (i in 1:q){
a[i] = 0.9*10^(-i)
}
sum_w = sum(a)
for (i in 1:q){
a[i] = a[i] / sum_w
}
w = append(w,data[1:q])
print(w)
for (i in q+1:T){
w_t = 0
for (j in 1:q){
w_t = w_t + a[j]*data[i-j]
}
w = append(w,w_t)
}
print(w)
return (w)
}
else {
#2-sided MA calculations
#append left and right tails of data for computation
l_data = rep(data[1],q)
r_data = rep(data[length(data)],q)
data = append(data, l_data, after = 1)
data = append(data, r_data)
T = length(data)
for (i in q+1:T-2*q){
#calculation of MA_t:
w_t = 1/(2*q+1)*sum(data[(i-q:i+q)])
w = append(w,w_t)
}
}
return(w)
}
test_series = c(0,1,2,1,2,1,2,2,2,3,4,5,4,5,6,7,7,8,9,10,9,8,11)
x = movAvg(test_series,3,TRUE)
y = movAvg(test_series,3,FALSE)
plot(test_series)
plot(x)
plot(y)
#load required functions
source('/Users/linhnguyen/Desktop/BP2003/dating.R')
source('/Users/linhnguyen/Desktop/BP2003/diag_par.R')
source('/Users/linhnguyen/Desktop/BP2003/OLS.R')
#library(matlib)
#function to calculate simple OLS regression in matrix form
OLS = function(x,y) {
###
# x = matrix of independent vars
# y = vector of dependent vars
# **********
# b = beta of OLS
###
b = solve(t(x) %*% x) %*% t(x) %*% y
b = matrix(b)
return (b)
}
#load required functions
source('/Users/linhnguyen/Desktop/BP2003/dating.R')
source('~/order.R', echo=TRUE)
source('~/ssrnull.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
getwd()
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/order.R', echo=TRUE)
source('~/Desktop/BP2003/order.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/order.R', echo=TRUE)
source('~/Desktop/BP2003/order.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
#function to rotate a matrix 90 degree counterclockwise
rot90 = function(A){
rA = dim(A)[1]
cA = dim(A)[2]
B = matrix (0L, nrow = cA, ncol = rA)
for (i in 1:rA){
tempA = A[i,,drop=FALSE]
tempA = tempA[,seq(dim(A)[2],1,-1)] #reverse the row elements
tempB = t(tempA) #transpose the row
B[,i] = tempB
}
return(B)
}
tM = matrix(c(1:10),nrow = 2, ncol =5)
rot90(tM)
tM
rot90(rot90(tM))
tM = matrix(c(1:100), nrow = 5, ncol = 20)
rot90(tM)
tM
getwd(0)
getwd()
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/partione.R', echo=TRUE)
source('~/Desktop/BP2003/partione.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
seq(2,2,1)
seq(2,1,1)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/diag_par.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/diag_par.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/diag_par.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
class(z)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/diag_par.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/correct.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pftest.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
% correct confidence intervals for the break dates.
source('~/Desktop/BP2003/date/nldat.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
options(error=echo)
options(echo=TRUE)
source('~/brcode.R', echo=TRUE)
x = matrix(c(1:1000),nrow = 20,ncol=50)
tx = x[:,1]
tx = x[,1]
class(tx)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
option(echo = TRUE)
option(echo = TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/Desktop/BP2003/onebp.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/sequa.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/date/ssr.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/preparti.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/psigmq.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/psigmq.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
option(error=echo)
options(error=echo)
options(error=TRUE)
options(echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
options(echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pvdel.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
print(paste('a','b',sep='/n')
)
print(paste('a','b',sep='\n'))
print(paste('a','b',sep = '\n'))
print(paste('a','b',sep = '/n'))
print(paste('a','b',sep = ','))
print(paste('a','b',sep = '\t'))
print(paste('a','b',sep = '/t'))
print(paste('a','b',sep = \n))
print(cat('a','b',sep = \n))
print(cat('a','b',sep = '\n'))
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
source('~/Desktop/BP2003/funcg.R', echo=TRUE)
funcg(1,2,3,4,5,6)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
cvg(1,2,3)
source('~/Desktop/BP2003/cvg.R', echo=TRUE)
source('~/estim.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
options(echo =TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/estim.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/interval.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
View(data)
India = data[data$Country = 'India',]
India = data[data$Country == 'India',]
View(India)
IndiaGDP = India[India$MEASURE == 'National currency, current prices, quarterly levels',]
source('~/Desktop/BP2003/quickLook.R', echo=TRUE)
View(IndiaGDP)
source('~/Desktop/BP2003/quickLook.R', echo=TRUE)
View(India)
View(India)
source('~/Desktop/BP2003/quickLook.R', echo=TRUE)
View(IndiaGDP)
View(IndiaGDP)
IndiaGDP = India[India$MEASURE == 'CQR',]
View(IndiaGDP)
IndiaGDP1 = India[IndiaGDP$SUBJECT == 'B1_GE',]
View(IndiaGDP1)
source('~/Desktop/BP2003/quickLook.R', echo=TRUE)
View(IndiaGDP1)
View(IndiaGDP1)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
options(echo =TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
tA = matrix(c(1:4),1,4)
tB = matrix(c(1:4),1,4)
identical(tA,tB)
source('~/Desktop/BP2003/pbreak.R', echo=TRUE)
source('~/Desktop/BP2003/brcode.R', echo=TRUE)
